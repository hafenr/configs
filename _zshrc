# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="josh"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(
    git
    macos
)

# ====== init ======
source $ZSH/oh-my-zsh.sh

# ====== config ======
unsetopt correct_all # don't try to guess corrections when mistyping

# ====== cd history ======
# $ cd -<TAB>
# or
# $ cd +<TAB>
setopt pushdtohome
# setopt pushdsilent # omit printing directory stack
setopt autopushd    # make cd push directories onto stack
setopt pushdminus  # invert meanings of +N and -N arguments to pushd
export DIRSTACKSIZE=8

bindkey \^U backward-kill-line

export EDITOR=vim
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export DELTA_REPO_PATH=/Users/rhafen/dq/dev/delta
# export PATH="$PATH:/opt/homebrew/Cellar/node@16/16.14.2/bin"
export PATH="$PATH:/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin"
export PATH="$PATH:/opt/flyway-9.1.3"

export PATH="/opt/homebrew/opt/node@16/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/node@16/lib"
export CPPFLAGS="-I/opt/homebrew/opt/node@16/include"

# export SOPS_AGE_KEY="$(age -d ~/dq/shared-pw-store-key.age)" 

# aliases
alias l='ls -alh'
alias gch='git checkout'
alias gs='git status'
alias gco='git commit'
alias gpl='git pull'
alias gps='git pull'
alias ibrew='/usr/local/bin/brew'
alias vim=nvim
alias pb=pnpm

# scala
## for intellj integration
SCALA_HOME=/opt/homebrew/opt/scala/idea

# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# fzf
## remember to run the following command after installing fzf via brew
##   $(brew --prefix)/opt/fzf/install
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# pnpm
export PNPM_HOME="/Users/rhafen/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
#
export SSH_AUTH_SOCK="$(brew --prefix)/var/run/yubikey-agent.sock"

export PATH="/opt/homebrew/opt/sqlite/bin:$PATH"

cd() {
    if (( $# == 0 )); then
        builtin cd                # This calls the shell version of cd
    else
        builtin cd "$@"           # This calls the shell version of cd
    fi
    msg="cd $(pwd)"
    print -s "$msg"               # This writes to the history 'file'
}

source <(fzf --zsh)

# Set ignored files in ~/.agignore
export FZF_DEFAULT_COMMAND='ag -l -g ""'
