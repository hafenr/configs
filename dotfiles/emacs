;       ____   __  ___   ___   _____   ____        ___   _____ 
;     / __/  /  |/  /  / _ | / ___/  / __/       / _ \ / ___/
;   / _/   / /|_/ /  / __ |/ /__   _\ \        / , _// /__  
; /___/  /_/  /_/  /_/ |_|\___/  /___/       /_/|_| \___/ 
                                             

;;
;; Disable icon bar
;;
(tool-bar-mode -1)
;; (setq initial-frame-alist '((top . 0) (left . 0) (width . 600) (height . 480)))


;;
;; Initialize ELPA
;;
(require 'package)
(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                         ("marmalade" . "http://marmalade-repo.org/packages/")
                         ("melpa" . "http://melpa.milkbox.net/packages/")
			 ("tromey" . "http://tromey.com/elpa/")))
(package-initialize)
(when (not package-archive-contents)
  (package-refresh-contents))


;;
;; Initialize el-get
;;
(add-to-list 'load-path "~/.emacs.d/el-get/el-get")
(unless (require 'el-get nil 'noerror)
  (with-current-buffer
      (url-retrieve-synchronously
       "https://raw.github.com/dimitri/el-get/master/el-get-install.el")
    (goto-char (point-max))
    (eval-print-last-sexp)))

(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")
(el-get 'sync)


;;
;; Vim emulation
;;
(require 'evil)
(evil-mode 1)


;;
;; Color-theme plugin, has to be installed by M-x el-get-install RET color-theme RET
;;
(require 'color-theme)
(color-theme-initialize)
;; (color-theme-molokai)
(add-to-list 'custom-theme-load-path "~/.emacs.d/themes")
(add-to-list 'load-path "~/.emacs.d/themes")
(load-theme 'tomorrow-night-bright t)
;; (load-theme 'obsidian t)

;;
;; Install clojure-mode from ELPA if it isn't installed already
;;
(unless (package-installed-p 'clojure-mode)
  (package-refresh-contents)
  (package-install 'clojure-mode))

;;
;; Font size, height is /100
;;
(set-face-attribute 'default nil :height 140)


;;
;; ESS
;;
(require 'ess-site)


;;
;; Load and configure SLIME
;;
;; (add-to-list 'load-path "~/.emacsplugins/slime")
;; (require 'slime)
;; (eval-after-load 'slime '(setq slime-protocol-version 'ignore))
;; (slime-setup '(slime-repl))

;;
;; Load a major mode for editing Clojure code.
;;
(require 'clojure-mode)

;;
;; Activate flexible file matching
;;
(require 'flx-ido)
(ido-mode 1)
(ido-everywhere 1)
(flx-ido-mode 1)
;; disable ido faces to see flx highlights.
(setq ido-use-faces nil)


;; Set directory to home dir
(setq default-directory "~/")


;;
;; Surround
;;
(add-to-list 'load-path "~/.emacs.d/evil-surround")
(require 'surround)
(global-surround-mode 1)


;;
;; Other plugins
;;
(require 'auto-complete)
(auto-complete-mode 1)


(require 'yasnippet)
;; (yas-minor-mode 1)
(yas-global-mode 1)


;; Need to M-x package-install RET dropdown-list RET
(require 'dropdown-list)
(setq yas-prompt-functions '(yas-dropdown-prompt
			     yas-ido-prompt
                             yas-completing-prompt))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-auto-start 1)
 '(ac-delay 0.0)
 '(ac-trigger-key "TAB")
 '(ac-use-menu-map t))


;; Navigate in auto-complete list
(define-key ac-menu-map (kbd "C-n") 'ac-next)
(define-key ac-menu-map (kbd "C-p") 'ac-previous)

;; Save here instead of littering current directory with emacs backup files
(setq backup-directory-alist `(("." . "~/.saves")))


;;
;; CLOJURE
;;
(add-to-list 'auto-mode-alist '("\\.edn$" . clojure-mode))

;; Cider
(add-hook 'cider-mode-hook 'cider-turn-on-eldoc-mode)
(setq cider-repl-pop-to-buffer-on-connect t)
(setq cider-popup-stacktraces t)
(setq cider-repl-popup-stacktraces t)
(setq cider-auto-select-error-buffer t)
(setq cider-repl-history-file "~/.emacs.d/cider-history")
(setq cider-repl-wrap-history t)

(add-hook 'cider-repl-mode-hook 'subword-mode)
(add-hook 'cider-repl-mode-hook 'paredit-mode)
(add-hook 'cider-repl-mode-hook 'rainbow-delimiters-mode)
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; Load the paredit-menu after loading paredit
(eval-after-load "paredit.el"
  '(require 'paredit-menu))


;; Projectile is like Vim's CTRLP for emacs
(projectile-global-mode 1)
;; If you want Projectile to be usable in every directory (even without the presence of project file):
(setq projectile-require-project-root nil)


;; Enable ido mode for M-x
(smex-initialize)


;; Load default config for smartparens
(require 'smartparens-config)


;; Install Mu4te
;; http://www.djcbsoftware.nl/code/mu/mu4e.html


(require 'powerline)
(powerline-default-theme)
;; (powerline-center-theme)


;; Press C-= to expand the region
(require 'expand-region)
(global-set-key (kbd "C-=") 'er/expand-region)
(delete-selection-mode 1)


;; Git plugin
;; Cheathseet with basic commands: http://daemianmack.com/magit-cheatsheet.html
(require 'magit)


;; Starter-kit (I think) overrides this => enable again
(menu-bar-mode 1)


;; Make org-mode available
(require 'org)


;; Enable window numbering mode, all windows are accessible by M-1, M-2, ...
(window-numbering-mode)
